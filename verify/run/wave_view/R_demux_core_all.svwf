
#
# Mnemonic Maps
#
mmap new  -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new  -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

array unset createdGroup
array set createdGroup {}
#
# Groups
#
if {[catch {group get -using [list {Group 1}]}]} {
set createdGroup([list {Group 1}]) 1
catch {group new -name {Group 1} -overlay 0}
}
if {[catch {group get -using [list {Group 2}]}]} {
set createdGroup([list {Group 2}]) 1
catch {group new -name {Group 2} -overlay 0}
}
if {[catch {group get -using [list {Group 3}]}]} {
set createdGroup([list {Group 3}]) 1
catch {group new -name {Group 3} -overlay 0}
}
if {[info exists createdGroup([list {Group 1}])]} {
group using {Group 1}
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.master_infs[0].ar_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[0].ar_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[0].ar_id[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[0].r_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[0].r_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[0].r_id[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.ar_in_flight_cnt[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.ar_cur_sta[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.ar_sel_cur[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.ar_push_en}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.loopup_ar_sel[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.lookup_ar_sel_taken}]} ]
}

if {[info exists createdGroup([list {Group 2}])]} {
group using {Group 2}
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.master_infs[1].ar_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[1].ar_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[1].ar_id[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[1].r_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[1].r_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[1].r_id[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.tr_in_flight_cnt[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.ar_in_flight_cnt[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.ar_cur_sta[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.ar_sel_cur[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.ar_push_en}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.lookup_ar_sel_taken}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.loopup_ar_sel[2:0]}]} ]
}

if {[info exists createdGroup([list {Group 3}])]} {
group using {Group 3}
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.master_infs[2].ar_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[2].ar_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[2].aw_id[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[2].r_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[2].r_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[2].r_id[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[2].ar_id[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.tr_in_flight_cnt[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.ar_in_flight_cnt[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.ar_cur_sta[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.ar_sel_cur[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.ar_push_en}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.loopup_ar_sel[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.lookup_ar_sel_taken}]} ]
}

set id [waveform add -signals [subst  {
	{[format {tb_axi_xbar_top.clk}]}
	} ]]

set groupId0 [waveform add -groups {{Group 1}}]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {tb_axi_xbar_top.master_infs[0].ar_valid}]} {}
    {[format {tb_axi_xbar_top.master_infs[0].ar_ready}]} {}
    {[format {tb_axi_xbar_top.master_infs[0].ar_id[3:0]}]} {}
    {[format {tb_axi_xbar_top.master_infs[0].r_valid}]} {}
    {[format {tb_axi_xbar_top.master_infs[0].r_ready}]} {}
    {[format {tb_axi_xbar_top.master_infs[0].r_id[3:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.ar_in_flight_cnt[3:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.ar_cur_sta[1:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.ar_sel_cur[2:0]}]} {-color #ff00ff -namecolor #ff00ff}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.ar_push_en}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.loopup_ar_sel[2:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.lookup_ar_sel_taken}]} {}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}


set groupId0 [waveform add -groups {{Group 2}}]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {tb_axi_xbar_top.master_infs[1].ar_valid}]} {}
    {[format {tb_axi_xbar_top.master_infs[1].ar_ready}]} {}
    {[format {tb_axi_xbar_top.master_infs[1].ar_id[3:0]}]} {}
    {[format {tb_axi_xbar_top.master_infs[1].r_valid}]} {}
    {[format {tb_axi_xbar_top.master_infs[1].r_ready}]} {}
    {[format {tb_axi_xbar_top.master_infs[1].r_id[3:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.tr_in_flight_cnt[3:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.ar_in_flight_cnt[3:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.ar_cur_sta[1:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.ar_sel_cur[2:0]}]} {-color #ff00ff -namecolor #ff00ff}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.ar_push_en}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.lookup_ar_sel_taken}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.loopup_ar_sel[2:0]}]} {}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}


set groupId0 [waveform add -groups {{Group 3}}]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {tb_axi_xbar_top.master_infs[2].ar_valid}]} {}
    {[format {tb_axi_xbar_top.master_infs[2].ar_ready}]} {}
    {[format {tb_axi_xbar_top.master_infs[2].aw_id[3:0]}]} {}
    {[format {tb_axi_xbar_top.master_infs[2].r_valid}]} {}
    {[format {tb_axi_xbar_top.master_infs[2].r_ready}]} {}
    {[format {tb_axi_xbar_top.master_infs[2].r_id[3:0]}]} {}
    {[format {tb_axi_xbar_top.master_infs[2].ar_id[3:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.tr_in_flight_cnt[3:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.ar_in_flight_cnt[3:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.ar_cur_sta[1:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.ar_sel_cur[2:0]}]} {-color #ff00ff -namecolor #ff00ff}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.ar_push_en}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.loopup_ar_sel[2:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.lookup_ar_sel_taken}]} {}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}


waveform xview limits 2089723.646ps 2999593.148ps
