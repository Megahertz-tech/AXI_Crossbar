
#
# Mnemonic Maps
#
mmap new  -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new  -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

array unset createdGroup
array set createdGroup {}
#
# Groups
#
if {[catch {group get -using [list {clk_rst}]}]} {
set createdGroup([list {clk_rst}]) 1
catch {group new -name clk_rst -overlay 0}
}
if {[catch {group get -using [list {write}]}]} {
set createdGroup([list {write}]) 1
catch {group new -name write -overlay 0}
}
if {[catch {group get -using [list {read}]}]} {
set createdGroup([list {read}]) 1
catch {group new -name read -overlay 0}
}
if {[info exists createdGroup([list {clk_rst}])]} {
group using clk_rst
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_fifo_top.dut.clk}]} ] \
    [subst  {[format {tb_fifo_top.dut.rst_n}]} ]
}

if {[info exists createdGroup([list {write}])]} {
group using write
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_fifo_top.dut.wr_en}]} ] \
    [subst  {[format {tb_fifo_top.dut.data_in[31:0]}]} ] \
    [subst  {[format {tb_fifo_top.dut.wr_ptr[3:0]}]} ]
}

if {[info exists createdGroup([list {read}])]} {
group using read
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_fifo_top.dut.rd_en}]} ] \
    [subst  {[format {tb_fifo_top.dut.rd_ptr[3:0]}]} ] \
    [subst  {[format {tb_fifo_top.dut.data_out[31:0]}]} ]
}


set groupId0 [waveform add -groups clk_rst]


set groupId0 [waveform add -groups write]


set groupId0 [waveform add -groups read]

set id [waveform add -signals [subst  {
	{[format {tb_fifo_top.dut.count[4:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_fifo_top.dut.almost_empty}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_fifo_top.dut.almost_full}]}
	} ]]

waveform xview limits 0 645000ps
