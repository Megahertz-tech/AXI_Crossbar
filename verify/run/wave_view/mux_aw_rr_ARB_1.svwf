
#
# Mnemonic Maps
#
mmap new  -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new  -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

array unset createdGroup
array set createdGroup {}
#
# Groups
#
if {[catch {group get -using [list {Group 1}]}]} {
set createdGroup([list {Group 1}]) 1
catch {group new -name {Group 1} -overlay 0}
}
if {[catch {group get -using [list {Group 2}]}]} {
set createdGroup([list {Group 2}]) 1
catch {group new -name {Group 2} -overlay 0}
}
if {[catch {group get -using [list {Group 3}]}]} {
set createdGroup([list {Group 3}]) 1
catch {group new -name {Group 3} -overlay 0}
}
if {[catch {group get -using [list {Group 4}]}]} {
set createdGroup([list {Group 4}]) 1
catch {group new -name {Group 4} -overlay 0}
}
if {[catch {group get -using [list {Group 5}]}]} {
set createdGroup([list {Group 5}]) 1
catch {group new -name {Group 5} -overlay 0}
}
if {[catch {group get -using [list {demux_core_0}]}]} {
set createdGroup([list {demux_core_0}]) 1
catch {group new -name demux_core_0 -overlay 0}
}
if {[catch {group get -using [list {demux_core_1}]}]} {
set createdGroup([list {demux_core_1}]) 1
catch {group new -name demux_core_1 -overlay 0}
}
if {[catch {group get -using [list {demux_core_2}]}]} {
set createdGroup([list {demux_core_2}]) 1
catch {group new -name demux_core_2 -overlay 0}
}
if {[catch {group get -using [list {mux_aw_rr_ARB_0}]}]} {
set createdGroup([list {mux_aw_rr_ARB_0}]) 1
catch {group new -name mux_aw_rr_ARB_0 -overlay 0}
}
if {[catch {group get -using [list {mux_ae_rr_ARB_1}]}]} {
set createdGroup([list {mux_ae_rr_ARB_1}]) 1
catch {group new -name mux_ae_rr_ARB_1 -overlay 0}
}
if {[info exists createdGroup([list {Group 1}])]} {
group using {Group 1}
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[3].i_axi_mux.i_aw_fair_rr_arb.cur_sta[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[2].i_axi_mux.i_aw_fair_rr_arb.cur_sta[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[1].i_axi_mux.i_aw_fair_rr_arb.cur_sta[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[0].i_axi_mux.i_aw_fair_rr_arb.cur_sta[1:0]}]} ]
}

if {[info exists createdGroup([list {Group 2}])]} {
group using {Group 2}
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_cur_sta[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.slv_aw_select_i[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_sel_cur[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_in_flight_cnt[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_push_en}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.w_sel_empty}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.w_cur_sta[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.w_pop_cur}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.w_select_from_fifo[2:0]}]} ]
}

if {[info exists createdGroup([list {Group 3}])]} {
group using {Group 3}
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.slave_infs[0].aw_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[0].aw_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[1].aw_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[1].aw_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[2].aw_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[2].aw_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[3].aw_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[3].aw_ready}]} ]
}

if {[info exists createdGroup([list {Group 4}])]} {
group using {Group 4}
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.slave_infs[0].aw_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[0].aw_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[1].aw_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[1].aw_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[2].aw_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[2].aw_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[3].aw_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[3].aw_ready}]} ]
}

if {[info exists createdGroup([list {Group 5}])]} {
group using {Group 5}
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.slave_infs[0].w_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[0].w_last}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[0].w_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[1].w_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[1].w_last}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[1].w_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[2].w_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[2].w_last}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[2].w_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[3].w_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[3].w_last}]} ] \
    [subst  {[format {tb_axi_xbar_top.slave_infs[3].w_ready}]} ]
}

if {[info exists createdGroup([list {demux_core_0}])]} {
group using demux_core_0
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.master_infs[0].aw_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[0].aw_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[0].w_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[0].w_last}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[0].w_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_sel_cur[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_cur_sta[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_in_flight_cnt[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_sel_cur[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_push_en}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.w_sel_empty}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.w_cur_sta[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.w_pop_cur}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.w_select_from_fifo[2:0]}]} ]
}

if {[info exists createdGroup([list {demux_core_1}])]} {
group using demux_core_1
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.master_infs[1].aw_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[1].aw_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[1].w_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[1].w_last}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[1].w_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.slv_aw_select_i[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.aw_cur_sta[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.aw_in_flight_cnt[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.aw_push_en}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.w_sel_empty}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.w_cur_sta[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.w_pop_cur}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.w_select_from_fifo[2:0]}]} ]
}

if {[info exists createdGroup([list {demux_core_2}])]} {
group using demux_core_2
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.master_infs[2].aw_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[2].aw_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[2].w_valid}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[2].w_last}]} ] \
    [subst  {[format {tb_axi_xbar_top.master_infs[2].w_ready}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.slv_aw_select_i[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.aw_cur_sta[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.ar_in_flight_cnt[3:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.aw_sel_cur[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.aw_push_en}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.w_sel_empty}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.w_cur_sta[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.w_pop_cur}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.w_select_from_fifo[2:0]}]} ]
}

if {[info exists createdGroup([list {mux_aw_rr_ARB_0}])]} {
group using mux_aw_rr_ARB_0
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[0].i_axi_mux.i_aw_fair_rr_arb.cur_sta[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[0].i_axi_mux.i_aw_fair_rr_arb.req_i[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[0].i_axi_mux.i_aw_fair_rr_arb.cur_gnt_index[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[0].i_axi_mux.i_aw_fair_rr_arb.cur_frr_ptr[1:0]}]} ]
}

if {[info exists createdGroup([list {mux_ae_rr_ARB_1}])]} {
group using mux_ae_rr_ARB_1
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[1].i_axi_mux.i_aw_fair_rr_arb.req_o}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[1].i_axi_mux.i_aw_fair_rr_arb.cur_frr_ptr[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[1].i_axi_mux.i_aw_fair_rr_arb.cur_gnt_index[1:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[1].i_axi_mux.i_aw_fair_rr_arb.req_i[2:0]}]} ] \
    [subst  {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.gen_mst_port_mux[1].i_axi_mux.i_aw_fair_rr_arb.cur_sta[1:0]}]} ]
}


set groupId0 [waveform add -groups demux_core_0]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {tb_axi_xbar_top.master_infs[0].aw_valid}]} {-color #ff9900}
    {[format {tb_axi_xbar_top.master_infs[0].aw_ready}]} {}
    {[format {tb_axi_xbar_top.master_infs[0].w_valid}]} {}
    {[format {tb_axi_xbar_top.master_infs[0].w_last}]} {}
    {[format {tb_axi_xbar_top.master_infs[0].w_ready}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_sel_cur[2:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_cur_sta[2:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_in_flight_cnt[3:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_sel_cur[2:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.aw_push_en}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.w_sel_empty}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.w_cur_sta[1:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.w_pop_cur}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[0].i_axi_demux.i_axi_demux_core.w_select_from_fifo[2:0]}]} {}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}
waveform hierarchy collapse $groupId0


set groupId0 [waveform add -groups demux_core_1]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {tb_axi_xbar_top.master_infs[1].aw_valid}]} {-color #ff9900}
    {[format {tb_axi_xbar_top.master_infs[1].aw_ready}]} {}
    {[format {tb_axi_xbar_top.master_infs[1].w_valid}]} {}
    {[format {tb_axi_xbar_top.master_infs[1].w_last}]} {}
    {[format {tb_axi_xbar_top.master_infs[1].w_ready}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.slv_aw_select_i[2:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.aw_cur_sta[2:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.aw_in_flight_cnt[3:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.aw_push_en}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.w_sel_empty}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.w_cur_sta[1:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.w_pop_cur}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[1].i_axi_demux.i_axi_demux_core.w_select_from_fifo[2:0]}]} {}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}
waveform hierarchy collapse $groupId0


set groupId0 [waveform add -groups demux_core_2]
set gpGlist0 [waveform hierarchy contents $groupId0]
set gpID0 [lindex $gpGlist0 0]
foreach {name attrs} [subst  {
    {[format {tb_axi_xbar_top.master_infs[2].aw_valid}]} {-color #ff9900}
    {[format {tb_axi_xbar_top.master_infs[2].aw_ready}]} {}
    {[format {tb_axi_xbar_top.master_infs[2].w_valid}]} {}
    {[format {tb_axi_xbar_top.master_infs[2].w_last}]} {}
    {[format {tb_axi_xbar_top.master_infs[2].w_ready}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.slv_aw_select_i[2:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.aw_cur_sta[2:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.ar_in_flight_cnt[3:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.aw_sel_cur[2:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.aw_push_en}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.w_sel_empty}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.w_cur_sta[1:0]}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.w_pop_cur}]} {}
    {[format {tb_axi_xbar_top.i_axi_dut_wrapper.i_xbar.i_xbar_unmuxed.gen_slv_port_demux[2].i_axi_demux.i_axi_demux_core.w_select_from_fifo[2:0]}]} {}
}] childcmds {
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
    {}
} {
    set expected [ join [waveform signals -format path $gpID0] ]
    if {[string equal $name $expected] || $name == "cdivider"} {
        if {$attrs != ""} {
            eval waveform format $gpID0 $attrs
        }
        if { $childcmds != ""} {
            eval $childcmds
        }
    }
    set gpGlist0 [lrange $gpGlist0 1 end]
    set gpID0 [lindex $gpGlist0 0]
}
waveform hierarchy collapse $groupId0


set groupId0 [waveform add -groups mux_aw_rr_ARB_0]
waveform hierarchy collapse $groupId0


set groupId0 [waveform add -groups mux_ae_rr_ARB_1]


waveform xview limits 0 1790891.772ps
